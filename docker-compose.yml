services:
  # Zookeeper - Kafka依赖
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    container_name: security-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log
    networks:
      - security-network

  # Kafka - 消息队列
  kafka:
    image: confluentinc/cp-kafka:7.0.1
    hostname: kafka
    container_name: security-kafka
    depends_on:
      - zookeeper
    ports:
      - "9093:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_OPTS: >-
        -Dcom.sun.management.jmxremote
        -Dcom.sun.management.jmxremote.authenticate=false
        -Dcom.sun.management.jmxremote.ssl=false
        -Djava.rmi.server.hostname=kafka
        -Dcom.sun.management.jmxremote.rmi.port=9101
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - security-network

  # Elasticsearch - 日志搜索和存储
  elasticsearch:
    image: elasticsearch:8.11.1
    hostname: elasticsearch
    container_name: security-elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - node.name=elasticsearch
      - cluster.name=security-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.monitoring.collection.enabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - security-network

  # Kibana - Elasticsearch可视化
  kibana:
    image: kibana:8.11.1
    hostname: kibana
    container_name: security-kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_NAME=kibana
      - SERVER_HOST=0.0.0.0
    volumes:
      - kibana-data:/usr/share/kibana/data
    networks:
      - security-network

  # Neo4j - 图数据库
  neo4j:
    image: neo4j:4.4-community
    hostname: neo4j
    container_name: security-neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/security123
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_security_procedures_unrestricted=gds.*,apoc.*
      - NEO4J_dbms_security_procedures_allowlist=gds.*,apoc.*
      - NEO4J_dbms_connector_http_enabled=true
      - NEO4J_dbms_connector_http_listen__address=0.0.0.0:7474
      - NEO4J_dbms_connector_bolt_enabled=true
      - NEO4J_dbms_connector_bolt_listen__address=0.0.0.0:7687
      - NEO4J_browser_credential__timeout=0
      - NEO4J_browser_retain__connection__credentials=true
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
      - neo4j-import:/var/lib/neo4j/import
      - neo4j-plugins:/plugins
    networks:
      - security-network

  # ClickHouse - 分析数据库
  clickhouse:
    image: clickhouse/clickhouse-server:23.8-alpine
    hostname: clickhouse
    container_name: security-clickhouse
    ports:
      - "8123:8123"
      - "9001:9000"
    environment:
      - CLICKHOUSE_DB=security
      - CLICKHOUSE_USER=admin
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
      - CLICKHOUSE_PASSWORD=security123
    volumes:
      - clickhouse-data:/var/lib/clickhouse
    networks:
      - security-network

  # Redis - 缓存
  redis:
    image: redis:6.2-alpine
    hostname: redis
    container_name: security-redis
    ports:
      - "6380:6379"
    environment:
      - REDIS_PASSWORD=security123
    command: redis-server --requirepass security123
    volumes:
      - redis-data:/data
    networks:
      - security-network

  # MySQL - 元数据存储
  mysql:
    image: mysql:8.0
    hostname: mysql
    container_name: security-mysql
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=security123
      - MYSQL_DATABASE=security
      - MYSQL_USER=security
      - MYSQL_PASSWORD=security123
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - security-network

  # Flink JobManager - 流处理
  flink-jobmanager:
    image: apache/flink:1.17.0
    hostname: flink-jobmanager
    container_name: security-flink-jobmanager
    ports:
      - "8083:8081"
    command: jobmanager
    environment:
      FLINK_PROPERTIES: |
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 4
        parallelism.default: 2
        jobmanager.memory.process.size: 1600m
        taskmanager.memory.process.size: 1728m
    volumes:
      - flink-checkpoints:/tmp/flink-checkpoints
      - flink-jobmanager-logs:/opt/flink/log
    networks:
      - security-network

  # Flink TaskManager - 流处理工作节点
  flink-taskmanager:
    image: apache/flink:1.17.0
    hostname: flink-taskmanager
    container_name: security-flink-taskmanager
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      FLINK_PROPERTIES: |
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 4
        parallelism.default: 2
        jobmanager.memory.process.size: 1600m
        taskmanager.memory.process.size: 1728m
    volumes:
      - flink-checkpoints:/tmp/flink-checkpoints
      - flink-taskmanager-logs:/opt/flink/log
    networks:
      - security-network

  # Kafka UI - Kafka管理界面
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    hostname: kafka-ui
    container_name: security-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8082:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=security-cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    volumes:
      - kafka-ui-data:/tmp
    networks:
      - security-network

volumes:
  zookeeper-data:
    driver: local
  zookeeper-logs:
    driver: local
  kafka-data:
    driver: local
  elasticsearch-data:
    driver: local
  kibana-data:
    driver: local
  neo4j-data:
    driver: local
  neo4j-logs:
    driver: local
  neo4j-import:
    driver: local
  neo4j-plugins:
    driver: local
  clickhouse-data:
    driver: local
  redis-data:
    driver: local
  mysql-data:
    driver: local
  flink-checkpoints:
    driver: local
  flink-jobmanager-logs:
    driver: local
  flink-taskmanager-logs:
    driver: local
  kafka-ui-data:
    driver: local

networks:
  security-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.26.0.0/16