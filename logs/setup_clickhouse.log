📊 配置ClickHouse数据表...
⏳ 等待ClickHouse服务启动...
✅ ClickHouse服务已就绪

🏗️  创建安全分析数据库...
执行: CREATE DATABASE IF NOT EXISTS security_analysis


📋 创建安全事件表...
执行: 
CREATE TABLE IF NOT EXISTS security_analysis.security_events (
    event_id String,
    event_type String,
    timestamp DateTime64(3),
    src_ip IPv4,
    dst_ip IPv4,
    username String,
    process_name String,
    file_path String,
    file_hash String,
    domain String,
    url String,
    command_line String,
    risk_score Float32,
    threat_level String,
    is_anomaly Bool,
    anomaly_type String,
    raw_data String,
    created_at DateTime64(3) DEFAULT now64()
) ENGINE = MergeTree()
PARTITION BY toYYYYMM(timestamp)
ORDER BY (timestamp, event_type, risk_score)
SETTINGS index_granularity = 8192



🎯 创建实体分析表...
执行: 
CREATE TABLE IF NOT EXISTS security_analysis.security_entities (
    entity_id String,
    entity_type String,
    first_seen DateTime64(3),
    last_seen DateTime64(3),
    risk_score Float32,
    threat_level String,
    status String,
    metadata String,
    event_count UInt32,
    connection_count UInt32,
    created_at DateTime64(3) DEFAULT now64(),
    updated_at DateTime64(3) DEFAULT now64()
) ENGINE = ReplacingMergeTree(updated_at)
PARTITION BY entity_type
ORDER BY (entity_id, entity_type)
SETTINGS index_granularity = 8192



🔗 创建实体连接表...
执行: 
CREATE TABLE IF NOT EXISTS security_analysis.entity_connections (
    source_entity_id String,
    source_entity_type String,
    target_entity_id String,
    target_entity_type String,
    relationship_type String,
    confidence Float32,
    first_seen DateTime64(3),
    last_seen DateTime64(3),
    frequency UInt32,
    event_ids Array(String),
    created_at DateTime64(3) DEFAULT now64()
) ENGINE = MergeTree()
PARTITION BY relationship_type
ORDER BY (source_entity_id, target_entity_id, relationship_type)
SETTINGS index_granularity = 8192



🚨 创建告警表...
执行: 
CREATE TABLE IF NOT EXISTS security_analysis.security_alerts (
    alert_id String,
    timestamp DateTime64(3),
    severity String,
    title String,
    description String,
    source_event_id String,
    entities Array(String),
    risk_score Float32,
    status String,
    assigned_to String,
    response_actions Array(String),
    created_at DateTime64(3) DEFAULT now64(),
    resolved_at DateTime64(3)
) ENGINE = MergeTree()
PARTITION BY toYYYYMM(timestamp)
ORDER BY (timestamp, severity, risk_score)
SETTINGS index_granularity = 8192



📊 创建响应动作表...
执行: 
CREATE TABLE IF NOT EXISTS security_analysis.response_actions (
    action_id String,
    entity_id String,
    entity_type String,
    action_type String,
    action_details String,
    status String,
    executor String,
    timestamp DateTime64(3),
    result String,
    error_message String,
    created_at DateTime64(3) DEFAULT now64()
) ENGINE = MergeTree()
PARTITION BY toYYYYMM(timestamp)
ORDER BY (timestamp, entity_id, action_type)
SETTINGS index_granularity = 8192



📈 创建统计分析表...
执行: 
CREATE TABLE IF NOT EXISTS security_analysis.analysis_statistics (
    date Date,
    hour UInt8,
    total_events UInt32,
    high_risk_events UInt32,
    entities_extracted UInt32,
    connections_expanded UInt32,
    responses_executed UInt32,
    average_processing_time Float32,
    created_at DateTime64(3) DEFAULT now64()
) ENGINE = SummingMergeTree()
PARTITION BY date
ORDER BY (date, hour)
SETTINGS index_granularity = 8192



🔍 创建威胁情报表...
执行: 
CREATE TABLE IF NOT EXISTS security_analysis.threat_intelligence (
    indicator String,
    indicator_type String,
    threat_type String,
    confidence Float32,
    source String,
    description String,
    first_seen DateTime64(3),
    last_seen DateTime64(3),
    is_active Bool,
    tags Array(String),
    created_at DateTime64(3) DEFAULT now64(),
    updated_at DateTime64(3) DEFAULT now64()
) ENGINE = ReplacingMergeTree(updated_at)
PARTITION BY indicator_type
ORDER BY (indicator, indicator_type)
SETTINGS index_granularity = 8192



📋 创建基线数据表...
执行: 
CREATE TABLE IF NOT EXISTS security_analysis.baseline_data (
    entity_id String,
    entity_type String,
    baseline_type String,
    normal_pattern String,
    threshold_values String,
    created_at DateTime64(3) DEFAULT now64(),
    updated_at DateTime64(3) DEFAULT now64()
) ENGINE = ReplacingMergeTree(updated_at)
PARTITION BY entity_type
ORDER BY (entity_id, baseline_type)
SETTINGS index_granularity = 8192



🔗 创建物化视图...
执行: 
CREATE MATERIALIZED VIEW IF NOT EXISTS security_analysis.real_time_stats
ENGINE = SummingMergeTree()
PARTITION BY toYYYYMMDD(timestamp)
ORDER BY (event_type, toStartOfHour(timestamp))
AS SELECT
    event_type,
    toStartOfHour(timestamp) as hour,
    count() as event_count,
    countIf(is_anomaly = 1) as anomaly_count,
    avg(risk_score) as avg_risk_score,
    max(risk_score) as max_risk_score
FROM security_analysis.security_events
GROUP BY event_type, hour

Code: 47. DB::Exception: Missing columns: 'timestamp' while processing query: 'toYYYYMMDD(timestamp)', required columns: 'timestamp' 'timestamp'. (UNKNOWN_IDENTIFIER) (version 23.8.16.16 (official build))

执行: 
CREATE MATERIALIZED VIEW IF NOT EXISTS security_analysis.high_risk_entities
ENGINE = ReplacingMergeTree(last_seen)
PARTITION BY entity_type
ORDER BY (entity_id, entity_type)
AS SELECT
    entity_id,
    entity_type,
    risk_score,
    threat_level,
    status,
    last_seen
FROM security_analysis.security_entities
WHERE risk_score >= 70



📊 插入示例数据...
执行: 
INSERT INTO security_analysis.security_events VALUES
    ('evt-001', 'malware_detection', '2025-07-30 09:00:00', '192.168.1.100', '45.67.89.123', 'user1', 'malware.exe', 'C:\temp\malware.exe', 'abc123...', 'malicious.com', 'http://malicious.com/payload', 'malware.exe -c http://c2.com', 85.5, 'HIGH', true, 'malware_execution', '{"details": "Malware detected"}', now64()),
    ('evt-002', 'brute_force', '2025-07-30 09:05:00', '203.45.67.89', '192.168.1.10', 'admin', '', '', '', '', '', '', 75.2, 'HIGH', true, 'brute_force_login', '{"attempts": 150}', now64()),
    ('evt-003', 'data_exfiltration', '2025-07-30 09:10:00', '192.168.1.50', '8.8.8.8', 'finance_user', 'scp.exe', 'C:\Finance\data.xlsx', 'def456...', 'external.com', 'https://external.com/upload', 'scp data.xlsx user@external.com', 65.8, 'MEDIUM', true, 'large_data_transfer', '{"size": "50MB"}', now64())


执行: 
INSERT INTO security_analysis.security_entities VALUES
    ('192.168.1.100', 'ip', '2025-07-30 08:00:00', '2025-07-30 09:00:00', 45.2, 'MEDIUM', 'active', '{"is_private": true}', 5, 3, now64(), now64()),
    ('user1', 'user', '2025-07-30 08:30:00', '2025-07-30 09:00:00', 85.5, 'HIGH', 'compromised', '{"is_admin": false}', 2, 1, now64(), now64()),
    ('malware.exe', 'file', '2025-07-30 09:00:00', '2025-07-30 09:00:00', 95.0, 'CRITICAL', 'quarantined', '{"is_executable": true}', 1, 0, now64(), now64())


执行: 
INSERT INTO security_analysis.threat_intelligence VALUES
    ('45.67.89.123', 'ip', 'malware_c2', 0.95, 'ThreatDB', 'Known malware C2 server', '2025-07-29 00:00:00', '2025-07-30 09:00:00', true, ['c2', 'malware'], now64(), now64()),
    ('malicious.com', 'domain', 'phishing', 0.88, 'PhishTank', 'Phishing domain', '2025-07-28 00:00:00', '2025-07-30 09:00:00', true, ['phishing', 'malware'], now64(), now64())



🔍 验证数据库结构...
📋 数据库列表:
执行: SHOW DATABASES
INFORMATION_SCHEMA
default
information_schema
security
security_analysis
system


📊 表列表:
执行: SHOW TABLES FROM security_analysis
.inner_id.5ee10e3f-9cb5-4b0f-9e59-bd68f0193a2d
analysis_statistics
baseline_data
entity_connections
high_risk_entities
response_actions
security_alerts
security_entities
security_events
threat_intelligence


📈 事件统计:
执行: 
SELECT 
    event_type,
    count() as count,
    avg(risk_score) as avg_risk_score,
    max(risk_score) as max_risk_score
FROM security_analysis.security_events 
GROUP BY event_type 
ORDER BY count DESC

brute_force	2	75.19999694824219	75.2
data_exfiltration	2	65.80000305175781	65.8
malware_detection	2	85.5	85.5


🎯 实体统计:
执行: 
SELECT 
    entity_type,
    count() as count,
    avg(risk_score) as avg_risk_score
FROM security_analysis.security_entities 
GROUP BY entity_type 
ORDER BY count DESC

ip	2	45.20000076293945
file	2	95
user	2	85.5


🚨 威胁情报统计:
执行: 
SELECT 
    indicator_type,
    threat_type,
    count() as count
FROM security_analysis.threat_intelligence 
GROUP BY indicator_type, threat_type

domain	phishing	2
ip	malware_c2	2


✅ ClickHouse数据库配置完成！

🎯 可以通过以下方式访问ClickHouse:
   - HTTP: http://localhost:8123
   - Native: localhost:9001
   - Play UI: http://localhost:8123/play
   - 用户名: admin
   - 密码: security123
